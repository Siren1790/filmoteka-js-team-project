{"mappings":"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","sources":["src/partials_js/spinner.js","src/partials_js/main.js","src/partials_js/local_genres-storage.js","src/partials_js/pagination.js","src/partials_js/search.js"],"sourcesContent":["\nimport { refs } from \"./refs\";\n\nconst preloaderHide = () => {\n\trefs.preloader.classList.remove('show-preloader');\n}\n\nconst preloaderShow = () => {\n\trefs.preloader.classList.add('show-preloader');\n}\n\nexport { preloaderHide, preloaderShow }\n\n","\nimport { movie } from './api';\nimport { refs } from './refs';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { saveLocalStorageMovies, getLocalStorage } from './local_storage';\nimport { preloaderHide, preloaderShow } from './spinner';\nimport { preparePaginationDynamicList } from './pagination';\nimport { saveStorageGenres, createGenresObject } from './local_genres-storage';\nimport { refs } from './refs';\n\n\nasync function fetchData() {\n  preloaderShow();\n  const movies = await movie.fetchTrendingMovies();\n  const genres = await movie.fetchMovieGenres();\n  saveLocalStorageMovies(movies);\n  movie.setCurrentPage(movies.page);\n  movie.setTotalPages(movies.total_pages);\n  const objGenres = createGenresObject(genres);\n  saveStorageGenres(objGenres);\n  let cardsMovies = getLocalStorage();\n  let markup = createMarkupCardsFilms(cardsMovies.results);\n  refs.mainMarkFilms.innerHTML = markup;\n  refs.searchButton.scrollIntoView({ block: 'center', behavior: 'smooth' });\n  preparePaginationDynamicList();\n  preloaderHide();\n}\n\nfetchData();\n\n\nexport { fetchData };\n\n","import { movie } from './api';\n\n/**\n *\n * @param {*} array\n * @returns an object contains key=id & value=genre\n */\nfunction createGenresObject(array) {\n  const genres = {};\n\n  array.genres.forEach(({ id, name }) => {\n    genres[id] = name;\n  });\n  return genres;\n}\n\n/**\n *\n * @param {*} genres key\n * @returns an object {id: genre} saved in the Local Storage\n */\nfunction saveStorageGenres(genres) {\n    const key = 'genres';\n    const genresState = JSON.stringify(genres);\n    localStorage.setItem(key, genresState);\n}\n\n\n\n/**\n *\n * @param {*} genre_ids\n * @param {*} loadGenres\n * @returns array of genres and can use for modal\n */\nexport {saveStorageGenres, createGenresObject}","import { preloaderHide, preloaderShow } from './spinner';\nimport { movie } from './api';\nimport { refs } from './refs';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { saveLocalStorageMovies } from './local_storage';\n\nimport { fetchData } from './main';\n\nconst HIDE_STYLES = 'opacity: 0; position: relative; z-index: -100'; // сховати кнопку\nconst DEFAULT_STYLES = 'opacity: 1; position: relative; z-index: 1'; // показати кнопку\n\ndocument.addEventListener('click', e => {\n  //реакція на кнопки які нарисовані динамічно\n  const target = e.target.closest('.item-pagination');\n  const isTargetCorrect =\n    target &&\n    target.parentElement.classList.contains(\n      refs.paginationWrapperNode.classList.value\n    );\n\n  if (isTargetCorrect) {\n    // нічого не робити, якщо натиснуто на крапки\n    if (target.textContent === '...') return;\n\n    movie.setCurrentPage(parseInt(target.textContent)); // тягнемо з кнопки номер\n    if (movie.firstRequest) {\n      fetchData();\n      refs.scrollToTopButton.click();\n    } else {\n      searchPagination();\n      refs.scrollToTopButton.click();\n    }\n  }\n});\n\nconst getPrevValues = currentPage => {\n  //формуємо другу кнопку\n  return ['...', currentPage - 2, currentPage - 1];\n};\n\nconst getNextValues = (currentPage, total_pages) => {\n  //формуємо передостанню кнопку\n  return [currentPage + 1, currentPage + 2, '...', total_pages];\n};\n\nconst getPaginationValues = (currentPage, total_pages) => {\n  // формує початковий набір кнопок\n  if (currentPage === 1) {\n    refs.prevPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку <--\n    refs.nextPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку -->\n  }\n  if (currentPage === total_pages) {\n    refs.prevPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку <--\n    refs.nextPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку -->\n  }\n  if (currentPage > 1 && currentPage < total_pages) {\n    refs.prevPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку <--\n    refs.nextPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку -->\n  }\n  if (currentPage === 1 && total_pages > 9)\n    return [1, 2, 3, 4, 5, 6, 7, '...', total_pages];\n  if (total_pages - currentPage < 4 && total_pages > 9)\n    return [\n      1,\n      '...',\n      total_pages - 6,\n      total_pages - 5,\n      total_pages - 4,\n      total_pages - 3,\n      total_pages - 2,\n      total_pages - 1,\n      total_pages,\n    ];\n  if (currentPage > 1 && currentPage < 5 && total_pages > 9)\n    return [1, 2, 3, 4, 5, 6, 7, '...', total_pages];\n  if (currentPage > 4 && total_pages > 9)\n    return [\n      1,\n      getPrevValues(currentPage),\n      currentPage,\n      getNextValues(currentPage, total_pages),\n    ];\n\n  if (total_pages > 1 && total_pages < 10) {\n    let arr = [];\n    for (let i = 1; i <= total_pages; i++) {\n      arr[i - 1] = i;\n    }\n    return arr;\n  }\n};\n\nconst preparePaginationDynamicList = () => {\n  // відповірає за формування масиву з кнопками\n  const currentPage = movie.getCurrentPage();\n  const total_pages = movie.getTotalPages();\n  refs.paginationWrapperNode.innerHTML = ''; // очищаємо блок для кнопок пагінації\n  if (total_pages === 1) {\n    refs.prevPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку <--\n    refs.nextPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку -->\n    return;\n  }\n\n  const paginationValues = getPaginationValues(currentPage, total_pages);\n  let nodesArray;\n\n  nodesArray = paginationValues.flat(1).map(value => {\n    // формує масив кнопок\n    return `<li class=\"item-pagination\"><button class=\"btn-pagination ${\n      currentPage === value ? 'active' : ''\n    }\">${value}</button></li>`;\n  });\n  renderPaginationDynamicList(nodesArray); // ТУТ МАЛЮЄМО КНОПКИ\n};\n\nconst renderPaginationDynamicList = nodes => {\n  // відповірає за малювання кнопок\n  if (refs.paginationWrapperNode.childNodes.length > 0) {\n    refs.paginationWrapperNode.innerHTML = null;\n  }\n  if (nodes.length !== 0) {\n    refs.paginationWrapperNode.insertAdjacentHTML(\n      'afterbegin',\n      nodes.join('').replace(',', '.')\n    );\n  }\n};\n\n// KEYBOARD PAGINATION\nwindow.addEventListener('keydown', onArrowButtons);\nfunction onArrowButtons(event) {\n  if (event.code === 'ArrowLeft' && movie.getCurrentPage() > 1){\n    movie.currentPage -= 1;\n    refs.scrollToTopButton.click();\n  }\n    \n  if (    event.code === 'ArrowRight' && movie.getTotalPages() > movie.getCurrentPage()){\n    movie.currentPage += 1;\n    refs.scrollToTopButton.click();\n  }\n    \n  if (movie.firstRequest) {\n    fetchData();\n  } else {\n    searchPagination();\n  }\n}\n\n[refs.prevPaginationNode, refs.nextPaginationNode].map(node => {\n  // відповірає за реакцію на стрілки\n  node &&\n    node.addEventListener('click', async () => {\n      const pageValue = node.classList.value.includes('prev')\n        ? (movie.currentPage -= 1)\n        : (movie.currentPage += 1);\n\n      if (movie.firstRequest) {\n        fetchData();\n      } else {\n        searchPagination();\n      }\n    });\n});\n\nasync function searchPagination() {\n  //SEARCH PAGINATION\n  preloaderShow();\n  const moviesSearch = await movie.fetchSearchMovies();\n  saveLocalStorageMovies(moviesSearch);\n  movie.setCurrentPage(moviesSearch.page);\n  let markup = createMarkupCardsFilms(moviesSearch.results);\n  refs.mainMarkFilms.innerHTML = markup;\n  preparePaginationDynamicList();\n  preloaderHide();\n}\n\nexport { preparePaginationDynamicList };\n","import { movie } from './api';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { refs } from './refs';\nimport { saveLocalStorageMovies, getLocalStorage } from './local_storage';\nimport { preloaderHide, preloaderShow } from './spinner';\nimport { preparePaginationDynamicList } from './pagination';\n\nrefs.searchBadResult.hidden = true;\n\nasync function hideErrorMessage() {\n  setTimeout(() => (refs.searchBadResult.hidden = true), 2000);\n}\n\nrefs.searchButton.addEventListener('submit', onSubmit);\n\nasync function onSubmit(event) {\n  event.preventDefault();\n  preloaderShow();\n  if (event.currentTarget.searchQuery.value) {\n    refs.searchBadResult.hidden = true;\n    movie.setSearchValue(event.currentTarget.searchQuery.value);\n    event.currentTarget.searchQuery.value = '';\n    movie.resetPage();\n\n    const response = await movie.fetchSearchMovies();\n    const searchAnswer = response.results;\n\n    movie.setCurrentPage(response.page);\n    movie.setTotalPages(response.total_pages);\n\n\n    if (searchAnswer.length > 0) {\n      saveLocalStorageMovies(response);\n      let cardsMovies = getLocalStorage();\n      let markup = createMarkupCardsFilms(cardsMovies.results);\n      refs.mainMarkFilms.innerHTML = markup;\n      refs.searchButton.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n\n      movie.firstRequest = false;\n      preparePaginationDynamicList();\n    } else {\n      refs.searchBadResult.hidden = false;\n      hideErrorMessage();\n    }\n  } else {\n    refs.searchBadResult.hidden = false;\n    hideErrorMessage();\n  }\n  preloaderHide();\n}\n\nexport { onSubmit };\n"],"names":["$kgjKk","parcelRequire","$a64966ae89115f44$export$f4c41a4539594acb","refs","preloader","classList","remove","$a64966ae89115f44$export$c8b0c55c24870a90","add","$ll9qB","$36ac885cdd85b1bf$export$94e2638a41923eca","array","genres","forEach","id","name","$36ac885cdd85b1bf$export$a27d5cb887d5263a","genresState","JSON","stringify","localStorage","setItem","async","$738ac1d93c48538f$export$8134c072fddab6a5","movies","movie","fetchTrendingMovies","fetchMovieGenres","$hbEqn","saveLocalStorageMovies","setCurrentPage","page","setTotalPages","total_pages","cardsMovies","getLocalStorage","markup","$cBXj4","default","results","mainMarkFilms","innerHTML","searchButton","scrollIntoView","block","behavior","$19ec9ba508b87b29$export$8f98098a7ec6ad44","document","addEventListener","e","target","closest","parentElement","contains","paginationWrapperNode","value","textContent","parseInt","firstRequest","scrollToTopButton","click","$19ec9ba508b87b29$var$searchPagination","$19ec9ba508b87b29$var$getPrevValues","currentPage","$19ec9ba508b87b29$var$getNextValues","getCurrentPage","getTotalPages","prevPaginationNode","style","cssText","nextPaginationNode","paginationValues","arr","i","$19ec9ba508b87b29$var$getPaginationValues","nodesArray","flat","map","$19ec9ba508b87b29$var$renderPaginationDynamicList","nodes","childNodes","length","insertAdjacentHTML","join","replace","moviesSearch","fetchSearchMovies","window","event","code","node","includes","$368590897c3fddc0$var$hideErrorMessage","setTimeout","searchBadResult","hidden","preventDefault","currentTarget","searchQuery","setSearchValue","resetPage","response","searchAnswer"],"version":3,"file":"index.cb9092f6.js.map"}