{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-52250f9053aee176.js","src/partials_js/pagination.js","node_modules/@parcel/runtime-js/lib/runtime-51c9176090400f91.js","src/partials_js/createMarkupCardsFilms.js","src/partials_js/main.js","src/partials_js/spinner.js","src/partials_js/local_genres-storage.js","src/partials_js/search.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.8a8aad45.js\\\",\\\"hRQSB\\\":\\\"no_image.657fab7f.jpg\\\",\\\"7nwxg\\\":\\\"library.32a0cf0e.js\\\"}\"));","import {movie} from './api';\nimport { refs } from './refs';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\n\nimport { fetchData } from './main';\n\ndocument.addEventListener('click', (e) => {\n  const target = e.target.closest('.item-pagination');\n  const isTargetCorrect = target && target.parentElement.classList.contains(refs.paginationWrapperNode.classList.value);\n  if (isTargetCorrect) {\n    if(target.textContent === '...') return;\n    movie.fetchTrendingMovies(parseInt(target.textContent))\n      .then(data => {\n        preparePaginationDynamicList();\n        return renderMovies(data.results)\n      });\n  }\n});\nconst getPrevValues = (currentPage) => {\n  if (currentPage >= 5) {\n    return ['...', currentPage -2, currentPage -1]\n  }\n  // \n  if (currentPage > 2 && currentPage < 5){\n    return [\"...\", currentPage -1]\n  }\n\n  if(currentPage <= 2){\n    return[]\n  }\n\n  return [currentPage -2, currentPage -1]\n};\nconst getNextValues = (currentPage) => {\n  return [currentPage + 1, currentPage + 2, '...'];\n}\nconst getPaginationValues = (currentPage, total_pages) => {\n  // if (movie.isFirstPageActive) {\n    if(currentPage == 1){\n    return [2, 3, 4, 5, 6];\n  }\n\n  if (currentPage == total_pages) {\n    // return DEFAULT_END_PAGINATION;\n    return [total_pages - 5, total_pages - 4, total_pages - 3, total_pages - 2, total_pages - 1]\n  }\n  return [getPrevValues(currentPage), currentPage, getNextValues(currentPage)];\n}\nconst preparePaginationDynamicList = () => {\n  refs.paginationWrapperNode.innerHTML = '';\n  // const { currentPage, total_pages} = movie;\n  let currentPage = movie.getCurrentPage();\n  let total_pages = movie.getTotalPages();\n  refs.lastPaginationItemNode.textContent = total_pages;\n  const paginationValues = getPaginationValues(currentPage, total_pages);\n  let nodesArray;\n  nodesArray = paginationValues.flat(1).map((value) => {\n    return `<li class=\"item-pagination\"><button class=\"btn-pagination ${currentPage === value ? 'active' : ''}\">${value}</button></li>`\n  });\n  renderPaginationDynamicList(nodesArray);\n}\nconst renderPaginationDynamicList = (nodes) => {\n  if (refs.paginationWrapperNode.childNodes.length > 0){\n    refs.paginationWrapperNode.innerHTML = null;\n  }\n  if (nodes.length !== 0){\n    refs.paginationWrapperNode.insertAdjacentHTML('afterbegin', nodes.join(\"\").replace(',', '.'))\n  }\n}\n\n[refs.prevPaginationNode, refs.nextPaginationNode].map((node) => {\n  // node && node.addEventListener('click', async () => {\n    node.addEventListener('click', async () => {\n    const pageValue = node.classList.value.includes('prev') ?\n      (movie.currentPage -= 1) : (movie.currentPage += 1);\n     \n          if(movie.firstRequest){\n            // movie.setCurrentPage(event.target.textContent);\n            fetchData();\n          } else{\n            // movie.setCurrentPage(event.target.textContent);\n            const xxx = await movie.fetchSearchMovies();\n            createMarkupCardsFilms(xxx.results);\n          }\n        })\n})\n\n\nexport {preparePaginationDynamicList};","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"hRQSB\");","const BASE_URL_POSTER = 'https://image.tmdb.org/t/p/w500';\nimport noPhoto from '../images/no_image.jpg';\nimport { refs } from './refs';\n/**\n *\n * @param {*} arrayMovies\n * @returns markUP whith cards films\n */\n\nfunction markUpGenresInModal(genre_ids, loadGenres) {\n  let genersArray = []; // array for genres value\n  if (genre_ids) {\n    for (const key in loadGenres) {\n      if (genre_ids.includes(Number(key))) {\n        genersArray.push(' ' + loadGenres[key]);\n      }\n    }\n  } else {\n    genersArray = 'Sorry, but no information about genres';\n  }\n  return genersArray;\n}\n\nfunction markUpMainGenres(genre_ids, loadGenres) {\n  let genresForMain = markUpGenresInModal(genre_ids, loadGenres);\n  if (genresForMain && genresForMain.length >= 1) {\n    if (genresForMain.length > 3 || genresForMain.join('').length > 20) {\n      genresForMain.splice(2, 0, ' Other');\n      genresForMain.splice(3);\n      return genresForMain;\n    } else return genresForMain;\n  } else return (genresForMain = 'No information about genres');\n}\n\nexport default function createMarkupCardsFilms(arrayMovies) {\n  let markup = arrayMovies\n    .map(\n      ({ poster_path, title, genre_ids, release_date, vote_average, id }) => {\n        let genresState = localStorage.getItem('genres');\n        const loadGenres = JSON.parse(genresState);\n\n        let genresLoad = markUpMainGenres(genre_ids, loadGenres);\n\n        const imgRow = poster_path\n          ? `<img class=\"img-cover\" src=\"${BASE_URL_POSTER}${poster_path}\" alt=\"${title}\"/>`\n          : `<img class=\"img-cover\" src=\"${noPhoto}\" alt=\"no photo\" width=\"400\" height=\"500\">`;\n\n        const ratingRow = vote_average\n          ? `<p class=\"rating\">${vote_average.toFixed(1)}</p>`\n          : `<p class=\"rating visually-hidden\"></p>`;\n\n        return `<li class=\"item-films\"  data-index-film=\"${id}\">\n                ${imgRow}\n                <p class=\"title\">${\n                  title ? title.toUpperCase() : 'Sorry, no information'\n                } </p>\n                <div class=\"film-info\">\n                  <p class=\"genre\">${genresLoad}</p>\n                  <p class=\"year\">${\n                    release_date ? release_date.slice(0, 4) : 'N/A'\n                  }</p>\n                 ${ratingRow}\n                </div>\n              </li>`;\n      }\n    )\n    .join('');\n  refs.mainMarkFilms.innerHTML = markup;\n  refs.searchButton.scrollIntoView({ block: 'center', behavior: 'smooth' });\n}\n","import { movie } from \"./api\";\nimport createMarkupCardsFilms from \"./createMarkupCardsFilms\";\nimport {saveLocalStorageMovies, getLocalStorage} from './local_storage';\nimport {preloaderHide, preloaderShow } from './spinner';\nimport { preparePaginationDynamicList} from \"./pagination\";\nimport { saveStorageGenres, createGenresObject } from './local_genres-storage';\n\n\nasync function fetchData (){\n    preloaderShow();\n    const movies = await movie.fetchTrendingMovies();\n    const genres = await movie.fetchMovieGenres();\n    saveLocalStorageMovies(movies);\n    movie.setCurrentPage(movies.page);\n    movie.setTotalPages(movies.total_pages);\n    const objGenres = createGenresObject(genres);\n    saveStorageGenres(objGenres);\n    let cardsMovies = getLocalStorage()\n    createMarkupCardsFilms(cardsMovies.results);\n    preparePaginationDynamicList();\n    preloaderHide();\n}\nfetchData();\n\nexport {fetchData};","\nimport { refs } from \"./refs\";\n\nconst preloaderHide = () => {\n\trefs.preloader.classList.remove('show-preloader');\n}\n\nconst preloaderShow = () => {\n\trefs.preloader.classList.add('show-preloader');\n}\n\nexport { preloaderHide, preloaderShow }\n\n","import { movie } from './api';\n\n/**\n *\n * @param {*} array\n * @returns an object contains key=id & value=genre\n */\nfunction createGenresObject(array) {\n  const genres = {};\n\n  array.genres.forEach(({ id, name }) => {\n    genres[id] = name;\n  });\n  return genres;\n}\n\n/**\n *\n * @param {*} genres key\n * @returns an object {id: genre} saved in the Local Storage\n */\nfunction saveStorageGenres(genres) {\n    const key = 'genres';\n    const genresState = JSON.stringify(genres);\n    localStorage.setItem(key, genresState);\n}\n\n\n\n/**\n *\n * @param {*} genre_ids\n * @param {*} loadGenres\n * @returns array of genres and can use for modal\n */\nexport {saveStorageGenres, createGenresObject}","import { movie } from './api';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { refs } from './refs';\nimport { saveLocalStorageMovies, getLocalStorage } from './local_storage';\nimport { preloaderHide, preloaderShow } from './spinner';\nimport { preparePaginationDynamicList } from './pagination';\n\nrefs.searchBadResult.hidden = true;\n\nasync function hideErrorMessage() {\n  setTimeout(() => (refs.searchBadResult.hidden = true), 2000);\n}\n\nrefs.searchButton.addEventListener('submit', onSubmit);\n\nasync function onSubmit(event) {\n  event.preventDefault();\n  preloaderShow();\n  if (event.currentTarget.searchQuery.value) {\n    refs.searchBadResult.hidden = true;\n    movie.setSearchValue(event.currentTarget.searchQuery.value);\n    event.currentTarget.searchQuery.value = '';\n    movie.resetPage();\n    const response = await movie.fetchSearchMovies();\n    const searchAnswer = response.results;\n\n    movie.setCurrentPage(response.page);\n    movie.setTotalPages(response.total_pages);\n\n    if (searchAnswer.length > 0) {\n      saveLocalStorageMovies(response);\n      let cardsMovies = getLocalStorage();\n      createMarkupCardsFilms(cardsMovies.results);\n\n      movie.firstRequest = false;\n      preparePaginationDynamicList();\n    } else {\n      refs.searchBadResult.hidden = false;\n      hideErrorMessage();\n    }\n  } else {\n    refs.searchBadResult.hidden = false;\n    hideErrorMessage();\n  }\n  preloaderHide();\n}\n\nexport { onSubmit };\n"],"names":["parcelRequire","register","JSON","parse","$bpxeT","$a9c58646da08ef00$exports","getBundleURL","resolve","$df266fe4910f951c$var$markUpMainGenres","genre_ids","loadGenres","genresForMain","genersArray","key","includes","Number","push","$df266fe4910f951c$var$markUpGenresInModal","length","join","splice","$df266fe4910f951c$export$2e2bcd8739ae039","arrayMovies","markup","map","param","poster_path","title","release_date","vote_average","id","genresState","localStorage","getItem","genresLoad","imgRow","concat","$parcel$interopDefault","ratingRow","toFixed","toUpperCase","slice","$2gsSa","refs","mainMarkFilms","innerHTML","searchButton","scrollIntoView","block","behavior","$8d035050df10a3ec$export$f4c41a4539594acb","preloader","classList","remove","$8d035050df10a3ec$export$c8b0c55c24870a90","add","$51aa41606fb95c30$export$94e2638a41923eca","array","genres","forEach","name","$51aa41606fb95c30$export$a27d5cb887d5263a","stringify","setItem","$24dcd06c907632ab$export$8134c072fddab6a5","$24dcd06c907632ab$var$_fetchData","apply","this","arguments","$2TvXO","mark","_callee","movies","$fpMk3","movie","fetchTrendingMovies","_ctx","sent","fetchMovieGenres","$16XXu","saveLocalStorageMovies","setCurrentPage","page","setTotalPages","total_pages","getLocalStorage","results","$b4b44c749b77734b$export$8f98098a7ec6ad44","document","addEventListener","e","target","closest","parentElement","contains","paginationWrapperNode","value","textContent","parseInt","then","data","renderMovies","$b4b44c749b77734b$var$getPrevValues","currentPage","$b4b44c749b77734b$var$getNextValues","getCurrentPage","getTotalPages","lastPaginationItemNode","nodesArray","paginationValues","$b4b44c749b77734b$var$getPaginationValues","flat","$b4b44c749b77734b$var$renderPaginationDynamicList","nodes","childNodes","insertAdjacentHTML","replace","prevPaginationNode","nextPaginationNode","node","firstRequest","fetchSearchMovies","$302c553ce3ce8ba2$var$hideErrorMessage","$302c553ce3ce8ba2$var$_hideErrorMessage","setTimeout","searchBadResult","hidden","$302c553ce3ce8ba2$var$_onSubmit","event","response","searchAnswer","preventDefault","currentTarget","searchQuery","setSearchValue","resetPage"],"version":3,"file":"index.8a8aad45.js.map"}