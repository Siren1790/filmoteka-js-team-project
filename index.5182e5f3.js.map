{"mappings":"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","sources":["src/partials_js/pagination.js","src/partials_js/spinner.js","src/partials_js/main.js","src/partials_js/local_genres-storage.js","src/partials_js/search.js"],"sourcesContent":["import { movie } from './api';\nimport { refs } from './refs';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { saveLocalStorageMovies } from './local_storage';\n\nimport { fetchData } from './main';\n\nconst HIDE_STYLES = 'opacity: 0; position: relative; z-index: -100'; // сховати кнопку\nconst DEFAULT_STYLES = 'opacity: 1; position: relative; z-index: 1'; // показати кнопку\n\ndocument.addEventListener('click', e => { //реакція на кнопки які нарисовані динамічно\n  const target = e.target.closest('.item-pagination');\n  const isTargetCorrect =\n    target &&\n    target.parentElement.classList.contains(\n      refs.paginationWrapperNode.classList.value\n    );\n\n  if (isTargetCorrect) { // нічого не робити, якщо натиснуто на крапки\n    if (target.textContent === '...') return;\n\n    movie.setCurrentPage(parseInt(target.textContent)); // тягнемо з кнопки номер\n          if (movie.firstRequest) {\n              fetchData();\n      } else {\n        searchPagination();\n    }\n  }\n});\n\nconst getPrevValues = (currentPage) => { //формуємо другу кнопку\n    return ['...', currentPage - 2, currentPage - 1];\n};\n\nconst getNextValues = (currentPage, total_pages) => { //формуємо передостанню кнопку\n  return [currentPage + 1, currentPage + 2, '...', total_pages];\n};\n\nconst getPaginationValues = (currentPage, total_pages) => { // формує початковий набір кнопок\n      if (currentPage === 1) {\n    refs.prevPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку <--\n    refs.nextPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку -->\n  }\n    if (currentPage === total_pages) {\n    refs.prevPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку <--\n    refs.nextPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку -->\n  }\n  if (currentPage > 1 && currentPage < total_pages) {\n    refs.prevPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку <--\n    refs.nextPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку -->\n  }\n  if (currentPage === 1 && total_pages > 9) return [1, 2, 3, 4, 5, 6, 7, '...', total_pages];\n  if ((total_pages - currentPage) < 4 && total_pages > 9) return [1, '...', total_pages - 6, total_pages - 5, total_pages - 4, total_pages - 3, total_pages - 2, total_pages - 1, total_pages];\n  if (currentPage > 1 && currentPage < 5 && total_pages > 9) return [1, 2, 3, 4, 5, 6, 7, '...', total_pages];\n  if (currentPage > 4 && total_pages > 9) return [1, getPrevValues(currentPage), currentPage, getNextValues(currentPage, total_pages)];\n\n  if (total_pages > 1 && total_pages < 10) {\n    let arr= [];\n    for (let i = 1; i <= total_pages; i++) {\n      arr[i-1] = i;\n    }\n    return arr;\n  }\n};\n\nconst preparePaginationDynamicList = () => { // відповірає за формування масиву з кнопками\n  // const { currentPage, total_pages } = movie;\n  const currentPage = movie.getCurrentPage();\n  const total_pages = movie.getTotalPages();\n  refs.paginationWrapperNode.innerHTML = ''; // очищаємо блок для кнопок пагінації\n  if (total_pages === 1) {\n    refs.prevPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку <--\n    refs.nextPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку -->\n        return;\n  }\n\n  const paginationValues = getPaginationValues(currentPage, total_pages);\n  let nodesArray;\n\n  nodesArray = paginationValues.flat(1).map(value => { // формує масив кнопок\n    return `<li class=\"item-pagination\"><button class=\"btn-pagination ${\n      currentPage === value ? 'active' : ''\n    }\">${value}</button></li>`;\n  });\n  renderPaginationDynamicList(nodesArray);  // ТУТ МАЛЮЄМО КНОПКИ\n};\n\nconst renderPaginationDynamicList = nodes => { // відповірає за малювання кнопок\n  if (refs.paginationWrapperNode.childNodes.length > 0) {\n    refs.paginationWrapperNode.innerHTML = null;\n  }\n  if (nodes.length !== 0) {\n    refs.paginationWrapperNode.insertAdjacentHTML(\n      'afterbegin',\n      nodes.join('').replace(',', '.')\n    );\n  }\n};\n\n[refs.prevPaginationNode, refs.nextPaginationNode].map(node => { // відповірає за реакцію на стрілки\n  node &&\n    node.addEventListener('click', async () => {\n      const pageValue = node.classList.value.includes('prev')\n        ? (movie.currentPage -= 1)\n        : (movie.currentPage += 1);\n\n      // movie.setCurrentPage(pageValue); // записуємо номер поточної сторінки\n\n      // const data = movie.isSearched\n      //   ? await movie.fetchSearchMovies() // запит на популярні фільми\n      //   : await movie.fetchTrendingMovies(); // запит на пошук фільмів\n\n      // if (data.results.length) {\n      //   fetchData(); // робимо запит і відмальовуємо популярні фільми\n      // }\n\n      if (movie.firstRequest) {\n        fetchData();\n      } else {\n        searchPagination();\n    }\n    });\n});\n\n\nasync function searchPagination () {\n      //SEARCH PAGINATION\n      //preloaderShow();\n      const moviesSearch = await movie.fetchSearchMovies();\n      saveLocalStorageMovies(moviesSearch);\n      console.log('moviesSearch', moviesSearch.results);\n      movie.setCurrentPage(moviesSearch.page);\n      let markup = createMarkupCardsFilms(moviesSearch.results);\n      refs.mainMarkFilms.innerHTML = markup;\n      preparePaginationDynamicList();\n      //preloaderHide();\n  }\n\nexport { preparePaginationDynamicList };\n","\nimport { refs } from \"./refs\";\n\nconst preloaderHide = () => {\n\trefs.preloader.classList.remove('show-preloader');\n}\n\nconst preloaderShow = () => {\n\trefs.preloader.classList.add('show-preloader');\n}\n\nexport { preloaderHide, preloaderShow }\n\n","\nimport { movie } from './api';\nimport { refs } from './refs';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { saveLocalStorageMovies, getLocalStorage } from './local_storage';\nimport { preloaderHide, preloaderShow } from './spinner';\nimport { preparePaginationDynamicList } from './pagination';\nimport { saveStorageGenres, createGenresObject } from './local_genres-storage';\nimport { refs } from './refs';\n\n\nasync function fetchData() {\n  preloaderShow();\n  const movies = await movie.fetchTrendingMovies();\n  const genres = await movie.fetchMovieGenres();\n  saveLocalStorageMovies(movies);\n  movie.setCurrentPage(movies.page);\n  movie.setTotalPages(movies.total_pages);\n  const objGenres = createGenresObject(genres);\n  saveStorageGenres(objGenres);\n  let cardsMovies = getLocalStorage();\n  let markup = createMarkupCardsFilms(cardsMovies.results);\n  refs.mainMarkFilms.innerHTML = markup;\n  refs.searchButton.scrollIntoView({ block: 'center', behavior: 'smooth' });\n  preparePaginationDynamicList();\n  preloaderHide();\n}\n\nfetchData();\n\n\nexport { fetchData };\n\n","import { movie } from './api';\n\n/**\n *\n * @param {*} array\n * @returns an object contains key=id & value=genre\n */\nfunction createGenresObject(array) {\n  const genres = {};\n\n  array.genres.forEach(({ id, name }) => {\n    genres[id] = name;\n  });\n  return genres;\n}\n\n/**\n *\n * @param {*} genres key\n * @returns an object {id: genre} saved in the Local Storage\n */\nfunction saveStorageGenres(genres) {\n    const key = 'genres';\n    const genresState = JSON.stringify(genres);\n    localStorage.setItem(key, genresState);\n}\n\n\n\n/**\n *\n * @param {*} genre_ids\n * @param {*} loadGenres\n * @returns array of genres and can use for modal\n */\nexport {saveStorageGenres, createGenresObject}","import { movie } from './api';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { refs } from './refs';\nimport { saveLocalStorageMovies, getLocalStorage } from './local_storage';\nimport { preloaderHide, preloaderShow } from './spinner';\nimport { preparePaginationDynamicList } from './pagination';\n\nrefs.searchBadResult.hidden = true;\n\nasync function hideErrorMessage() {\n  setTimeout(() => (refs.searchBadResult.hidden = true), 2000);\n}\n\nrefs.searchButton.addEventListener('submit', onSubmit);\n\nasync function onSubmit(event) {\n  event.preventDefault();\n  preloaderShow();\n  if (event.currentTarget.searchQuery.value) {\n    refs.searchBadResult.hidden = true;\n    movie.setSearchValue(event.currentTarget.searchQuery.value);\n    event.currentTarget.searchQuery.value = '';\n    movie.resetPage();\n\n    const response = await movie.fetchSearchMovies();\n    const searchAnswer = response.results;\n\n    movie.setCurrentPage(response.page);\n    // movie.setIsSearched(true); //Юра\n    movie.setTotalPages(response.total_pages);\n    //Юра\n    // if (response.results.length <= 20) {\n    //   refs.listPaginationNode.innerHTML = '';\n    //   const template = `<li class=\"item-pagination\"><button class=\"btn-pagination\">1</button></li>`;\n    //   refs.listPaginationNode.insertAdjacentHTML('afterbegin', template);\n    // } else {\n    //   // implement pagination if movies > 20\n    // }\n\n    if (searchAnswer.length > 0) {\n      saveLocalStorageMovies(response);\n      let cardsMovies = getLocalStorage();\n      let markup = createMarkupCardsFilms(cardsMovies.results);\n      refs.mainMarkFilms.innerHTML = markup;\n      refs.searchButton.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n\n      movie.firstRequest = false;\n      preparePaginationDynamicList();\n    } else {\n      refs.searchBadResult.hidden = false;\n      hideErrorMessage();\n    }\n  } else {\n    // movie.setIsSearched(false); //Юра\n    refs.searchBadResult.hidden = false;\n    hideErrorMessage();\n  }\n  preloaderHide();\n}\n\nexport { onSubmit };\n"],"names":["$bpxeT","parcelRequire","$8d035050df10a3ec$export$f4c41a4539594acb","$2gsSa","refs","preloader","classList","remove","$8d035050df10a3ec$export$c8b0c55c24870a90","add","$51aa41606fb95c30$export$94e2638a41923eca","array","genres","forEach","param","id","name","$51aa41606fb95c30$export$a27d5cb887d5263a","genresState","JSON","stringify","localStorage","setItem","$24dcd06c907632ab$export$8134c072fddab6a5","$24dcd06c907632ab$var$_fetchData","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","movies","cardsMovies","markup","$fpMk3","movie","fetchTrendingMovies","_ctx","sent","fetchMovieGenres","$16XXu","saveLocalStorageMovies","setCurrentPage","page","setTotalPages","total_pages","getLocalStorage","$j9P1y","default","results","mainMarkFilms","innerHTML","searchButton","scrollIntoView","block","behavior","$b4b44c749b77734b$export$8f98098a7ec6ad44","$b4b44c749b77734b$var$HIDE_STYLES","$b4b44c749b77734b$var$DEFAULT_STYLES","document","addEventListener","e","target","closest","parentElement","contains","paginationWrapperNode","value","textContent","parseInt","firstRequest","$b4b44c749b77734b$var$searchPagination","$b4b44c749b77734b$var$getPrevValues","currentPage","$b4b44c749b77734b$var$getNextValues","getCurrentPage","getTotalPages","prevPaginationNode","style","cssText","nextPaginationNode","nodesArray","paginationValues","arr","i","$b4b44c749b77734b$var$getPaginationValues","flat","map","concat","$b4b44c749b77734b$var$renderPaginationDynamicList","nodes","childNodes","length","insertAdjacentHTML","join","replace","$b4b44c749b77734b$var$_searchPagination","moviesSearch","fetchSearchMovies","console","log","node","includes","$302c553ce3ce8ba2$var$hideErrorMessage","$302c553ce3ce8ba2$var$_hideErrorMessage","setTimeout","searchBadResult","hidden","$302c553ce3ce8ba2$var$_onSubmit","event","response","searchAnswer","preventDefault","currentTarget","searchQuery","setSearchValue","resetPage"],"version":3,"file":"index.5182e5f3.js.map"}