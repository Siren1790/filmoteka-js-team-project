{"mappings":"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","sources":["src/partials_js/pagination.js","src/partials_js/main.js","src/partials_js/spinner.js","src/partials_js/local_genres-storage.js","src/partials_js/search.js"],"sourcesContent":["import { movie } from './api';\nimport { refs } from './refs';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { saveLocalStorageMovies } from './local_storage';\n\nimport { fetchData } from './main';\n\nconst HIDE_STYLES = 'opacity: 0; position: relative; z-index: -100'; // сховати кнопку\nconst DEFAULT_STYLES = 'opacity: 1; position: relative; z-index: 1'; // показати кнопку\n\ndocument.addEventListener('click', e => { //реакція на кнопки які нарисовані динамічно\n  const target = e.target.closest('.item-pagination');\n  const isTargetCorrect =\n    target &&\n    target.parentElement.classList.contains(\n      refs.paginationWrapperNode.classList.value\n    );\n\n  if (isTargetCorrect) { // нічого не робити, якщо натиснуто на крапки\n    if (target.textContent === '...') return;\n\n    movie.setCurrentPage(parseInt(target.textContent)); // тягнемо з кнопки номер\n          if (movie.firstRequest) {\n              fetchData();\n      } else {\n        searchPagination();\n    }\n  }\n});\n\nconst getPrevValues = (currentPage) => { //формуємо другу кнопку\n    return ['...', currentPage - 2, currentPage - 1];\n};\n\nconst getNextValues = (currentPage, total_pages) => { //формуємо передостанню кнопку\n  return [currentPage + 1, currentPage + 2, '...', total_pages];\n};\n\nconst getPaginationValues = (currentPage, total_pages) => { // формує початковий набір кнопок\n      if (currentPage === 1) {\n    refs.prevPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку <--\n    refs.nextPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку -->\n  }\n    if (currentPage === total_pages) {\n    refs.prevPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку <--\n    refs.nextPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку -->\n  }\n  if (currentPage > 1 && currentPage < total_pages) {\n    refs.prevPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку <--\n    refs.nextPaginationNode.style.cssText = DEFAULT_STYLES; // показати стрілку -->\n  }\n  if (currentPage === 1 && total_pages > 9) return [1, 2, 3, 4, 5, 6, 7, '...', total_pages];\n  if ((total_pages - currentPage) < 4 && total_pages > 9) return [1, '...', total_pages - 6, total_pages - 5, total_pages - 4, total_pages - 3, total_pages - 2, total_pages - 1, total_pages];\n  if (currentPage > 1 && currentPage < 5 && total_pages > 9) return [1, 2, 3, 4, 5, 6, 7, '...', total_pages];\n  if (currentPage > 4 && total_pages > 9) return [1, getPrevValues(currentPage), currentPage, getNextValues(currentPage, total_pages)];\n\n  if (total_pages > 1 && total_pages < 10) {\n    let arr= [];\n    for (let i = 1; i <= total_pages; i++) {\n      arr[i-1] = i;\n    }\n    return arr;\n  }\n};\n\nconst preparePaginationDynamicList = () => { // відповірає за формування масиву з кнопками\n  // const { currentPage, total_pages } = movie;\n  const currentPage = movie.getCurrentPage();\n  const total_pages = movie.getTotalPages();\n  console.log(total_pages);\n  refs.paginationWrapperNode.innerHTML = ''; // очищаємо блок для кнопок пагінації\n  if (total_pages === 1) {\n    refs.prevPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку <--\n    refs.nextPaginationNode.style.cssText = HIDE_STYLES; // сховати стрілку -->\n        return;\n  }\n\n  const paginationValues = getPaginationValues(currentPage, total_pages);\n  let nodesArray;\n\n  nodesArray = paginationValues.flat(1).map(value => { // формує масив кнопок\n    return `<li class=\"item-pagination\"><button class=\"btn-pagination ${\n      currentPage === value ? 'active' : ''\n    }\">${value}</button></li>`;\n  });\n  renderPaginationDynamicList(nodesArray);  // ТУТ МАЛЮЄМО КНОПКИ\n};\n\nconst renderPaginationDynamicList = nodes => { // відповірає за малювання кнопок\n  if (refs.paginationWrapperNode.childNodes.length > 0) {\n    refs.paginationWrapperNode.innerHTML = null;\n  }\n  if (nodes.length !== 0) {\n    refs.paginationWrapperNode.insertAdjacentHTML(\n      'afterbegin',\n      nodes.join('').replace(',', '.')\n    );\n  }\n};\n\n[refs.prevPaginationNode, refs.nextPaginationNode].map(node => { // відповірає за реакцію на стрілки\n  node &&\n    node.addEventListener('click', async () => {\n      const pageValue = node.classList.value.includes('prev')\n        ? (movie.currentPage -= 1)\n        : (movie.currentPage += 1);\n\n      // movie.setCurrentPage(pageValue); // записуємо номер поточної сторінки\n\n      // const data = movie.isSearched\n      //   ? await movie.fetchSearchMovies() // запит на популярні фільми\n      //   : await movie.fetchTrendingMovies(); // запит на пошук фільмів\n\n      // if (data.results.length) {\n      //   fetchData(); // робимо запит і відмальовуємо популярні фільми\n      // }\n\n      if (movie.firstRequest) {\n              fetchData();\n      } else {\n        searchPagination();\n    }\n    });\n});\n\n\nasync function searchPagination () {\n      //SEARCH PAGINATION\n      //preloaderShow();\n      const moviesSearch = await movie.fetchSearchMovies();\n      // console.log('moviesSearch', moviesSearch);\n      saveLocalStorageMovies(moviesSearch);\n      movie.setCurrentPage(moviesSearch.page);\n      createMarkupCardsFilms(moviesSearch.results);\n      preparePaginationDynamicList();\n      //preloaderHide();\n  }\n\nexport { preparePaginationDynamicList };\n","\nimport { movie } from './api';\nimport { refs } from './refs';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { saveLocalStorageMovies, getLocalStorage } from './local_storage';\nimport { preloaderHide, preloaderShow } from './spinner';\nimport { preparePaginationDynamicList } from './pagination';\nimport { saveStorageGenres, createGenresObject } from './local_genres-storage';\nimport { refs } from './refs';\n\n\nasync function fetchData() {\n  preloaderShow();\n  const movies = await movie.fetchTrendingMovies();\n  const genres = await movie.fetchMovieGenres();\n  saveLocalStorageMovies(movies);\n  movie.setCurrentPage(movies.page);\n  movie.setTotalPages(movies.total_pages);\n  const objGenres = createGenresObject(genres);\n  saveStorageGenres(objGenres);\n  let cardsMovies = getLocalStorage();\n  let markup = createMarkupCardsFilms(cardsMovies.results);\n  refs.mainMarkFilms.innerHTML = markup;\n  refs.searchButton.scrollIntoView({ block: 'center', behavior: 'smooth' });\n  preparePaginationDynamicList();\n  preloaderHide();\n}\n\nfetchData();\n\n\nexport { fetchData };\n\n","\nimport { refs } from \"./refs\";\n\nconst preloaderHide = () => {\n\trefs.preloader.classList.remove('show-preloader');\n}\n\nconst preloaderShow = () => {\n\trefs.preloader.classList.add('show-preloader');\n}\n\nexport { preloaderHide, preloaderShow }\n\n","import { movie } from './api';\n\n/**\n *\n * @param {*} array\n * @returns an object contains key=id & value=genre\n */\nfunction createGenresObject(array) {\n  const genres = {};\n\n  array.genres.forEach(({ id, name }) => {\n    genres[id] = name;\n  });\n  return genres;\n}\n\n/**\n *\n * @param {*} genres key\n * @returns an object {id: genre} saved in the Local Storage\n */\nfunction saveStorageGenres(genres) {\n    const key = 'genres';\n    const genresState = JSON.stringify(genres);\n    localStorage.setItem(key, genresState);\n}\n\n\n\n/**\n *\n * @param {*} genre_ids\n * @param {*} loadGenres\n * @returns array of genres and can use for modal\n */\nexport {saveStorageGenres, createGenresObject}","import { movie } from './api';\nimport createMarkupCardsFilms from './createMarkupCardsFilms';\nimport { refs } from './refs';\nimport { saveLocalStorageMovies, getLocalStorage } from './local_storage';\nimport { preloaderHide, preloaderShow } from './spinner';\nimport { preparePaginationDynamicList } from './pagination';\n\nrefs.searchBadResult.hidden = true;\n\nasync function hideErrorMessage() {\n  setTimeout(() => (refs.searchBadResult.hidden = true), 2000);\n}\n\nrefs.searchButton.addEventListener('submit', onSubmit);\n\nasync function onSubmit(event) {\n  event.preventDefault();\n  preloaderShow();\n  if (event.currentTarget.searchQuery.value) {\n    refs.searchBadResult.hidden = true;\n    movie.setSearchValue(event.currentTarget.searchQuery.value);\n    event.currentTarget.searchQuery.value = '';\n    movie.resetPage();\n\n    const response = await movie.fetchSearchMovies();\n    const searchAnswer = response.results;\n\n    movie.setCurrentPage(response.page);\n    // movie.setIsSearched(true); //Юра\n    movie.setTotalPages(response.total_pages);\n    //Юра\n    // if (response.results.length <= 20) {\n    //   refs.listPaginationNode.innerHTML = '';\n    //   const template = `<li class=\"item-pagination\"><button class=\"btn-pagination\">1</button></li>`;\n    //   refs.listPaginationNode.insertAdjacentHTML('afterbegin', template);\n    // } else {\n    //   // implement pagination if movies > 20\n    // }\n\n    if (searchAnswer.length > 0) {\n      saveLocalStorageMovies(response);\n      let cardsMovies = getLocalStorage();\n      let markup = createMarkupCardsFilms(cardsMovies.results);\n      refs.mainMarkFilms.innerHTML = markup;\n      refs.searchButton.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n\n      movie.firstRequest = false;\n      preparePaginationDynamicList();\n    } else {\n      refs.searchBadResult.hidden = false;\n      hideErrorMessage();\n    }\n  } else {\n    // movie.setIsSearched(false); //Юра\n    refs.searchBadResult.hidden = false;\n    hideErrorMessage();\n  }\n  preloaderHide();\n}\n\nexport { onSubmit };\n"],"names":["$ll9qB","parcelRequire","$kgjKk","$a64966ae89115f44$export$f4c41a4539594acb","refs","preloader","classList","remove","$a64966ae89115f44$export$c8b0c55c24870a90","add","$36ac885cdd85b1bf$export$94e2638a41923eca","array","genres","forEach","id","name","$36ac885cdd85b1bf$export$a27d5cb887d5263a","genresState","JSON","stringify","localStorage","setItem","async","$738ac1d93c48538f$export$8134c072fddab6a5","movies","movie","fetchTrendingMovies","fetchMovieGenres","$hbEqn","saveLocalStorageMovies","setCurrentPage","page","setTotalPages","total_pages","cardsMovies","getLocalStorage","markup","$cBXj4","default","results","mainMarkFilms","innerHTML","searchButton","scrollIntoView","block","behavior","$19ec9ba508b87b29$export$8f98098a7ec6ad44","document","addEventListener","e","target","closest","parentElement","contains","paginationWrapperNode","value","textContent","parseInt","firstRequest","$19ec9ba508b87b29$var$searchPagination","$19ec9ba508b87b29$var$getPrevValues","currentPage","$19ec9ba508b87b29$var$getNextValues","getCurrentPage","getTotalPages","console","log","prevPaginationNode","style","cssText","nextPaginationNode","paginationValues","arr","i","$19ec9ba508b87b29$var$getPaginationValues","nodesArray","flat","map","$19ec9ba508b87b29$var$renderPaginationDynamicList","nodes","childNodes","length","insertAdjacentHTML","join","replace","moviesSearch","fetchSearchMovies","node","includes","$368590897c3fddc0$var$hideErrorMessage","setTimeout","searchBadResult","hidden","event","preventDefault","currentTarget","searchQuery","setSearchValue","resetPage","response","searchAnswer"],"version":3,"file":"index.213a5f11.js.map"}